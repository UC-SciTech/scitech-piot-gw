---
  # ansible based post installation configuration for the raspberry pi
  # update and upgrade
- name: Configure pi gateways
  become: true
  vars_files:
    - "./env/env.yaml"
  hosts:
    - gateways
  tasks:
    # - name: Add the gateway admin user
    #   ansible.builtin.user:
    #     name: piot
    #     password: "{{ PIOT_PASSWORD | password_hash('sha512') }}"
    #     comment: piot
    #     shell: /bin/bash
    #     state: present
    #     groups:
    #       - sudo
    #     append: true

    - name: Disable auto updates
      ansible.builtin.replace:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: "APT::Periodic::Update-Package-Lists \"1\";"
        replace: "APT::Periodic::Update-Package-Lists \"0\";"

    - name: Disable auto upgrades
      ansible.builtin.replace:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: "APT::Periodic::Unattended-Upgrade \"1\";"
        replace: "APT::Periodic::Unattended-Upgrade \"0\";"

    - name: Stop systemd-resolved service
      ansible.builtin.systemd_service:
        name: systemd-resolved
        state: stopped
        enabled: false
        masked: true

    - name: Remove symlink to resolv.conf
      ansible.builtin.file:
        path: /etc/resolv.conf
        state: absent

    - name: Create new resolv.conf
      ansible.builtin.copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 1.1.1.1
          nameserver 8.8.8.8
          nameserver 127.0.0.1
        owner: root
        group: root
        mode: '0644'

    - name: Update and upgrade
      ansible.builtin.apt:
        update_cache: true
        upgrade: 'yes'

    - name: Install mDNS and network manager
      ansible.builtin.apt:
        name: "{{ packages }}"
        update_cache: true
        state: present
      vars:
        packages:
          - "avahi-daemon"
          - "network-manager"

    - name: Install build essential and git
      ansible.builtin.apt:
        name: "{{ packages }}"
        update_cache: true
        state: present
      vars:
        packages:
          - "git"
          - "build-essential"
          - "python3-pip"

    - name: Install docker
      community.general.snap:
        name: docker
        state: present

    - name: Install docker python
      ansible.builtin.apt:
        name: "{{ packages }}"
        update_cache: true
        state: present
      vars:
        packages:
          - "python3-docker"

    - name: Pip install docker compose
      ansible.builtin.pip:
        name: docker-compose
        state: present

    - name: Create docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add admin user to docker group
      ansible.builtin.user:
        name: scitech
        groups: docker
        append: true

    - name: Create cloud init network config file
      ansible.builtin.file:
        path: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
        state: touch
        mode: '0644'

    - name: Disable cloud init network config
      ansible.builtin.lineinfile:
        path: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
        line: 'network: {config: disabled}'
        state: present

    - name: Delete cloud init netplan yaml file
      ansible.builtin.file:
        path: /etc/netplan/50-cloud-init.yaml
        state: absent

    - name: Add AP wlan ip netplan config
      ansible.builtin.template:
        src: templates/60-wifi-ap.yaml.j2
        dest: /etc/netplan/60-wifi-ap.yaml
        owner: root
        group: root
        mode: '0644'

    - name: Enable uart in boot config
      ansible.builtin.lineinfile:
        path: /boot/firmware/config.txt
        line: enable_uart=1
        state: present

    - name: Remove console from cmdline.txt
      ansible.builtin.replace:
        path: /boot/firmware/cmdline.txt
        regexp: "console=serial0,115200"
        replace: ""

    - name: Disable serial console service
      ansible.builtin.systemd_service:
        name: serial-getty@ttyS0
        state: stopped
        enabled: false
        masked: true

    - name: Disable hciuart service
      ansible.builtin.systemd_service:
        name: hciuart
        state: stopped
        enabled: false

    # - name: Disable bluetooth alsa service
    #   ansible.builtin.systemd_service:
    #     name: bluealsa
    #     state: stopped
    #     enabled: false

    - name: Disable bluetooth service
      ansible.builtin.systemd_service:
        name: bluetooth
        state: stopped
        enabled: false

    - name: Add udev rules file for serial
      ansible.builtin.file:
        path: /etc/udev/rules.d/10-serial-port.rules
        state: touch
        mode: u=rw,g=r,o=r

    - name: Add udev rules from cmdline
      ansible.builtin.blockinfile:
        path: /etc/udev/rules.d/10-serial-port.rules
        block: |
          KERNEL=="ttyS0", SYMLINK+="serial0" GROUP="tty" MODE="0666"
          KERNEL=="ttyAMA0", SYMLINK+="serial1" GROUP="tty" MODE="0666"
        state: present

    - name: Create a working directory if it does not exist
      ansible.builtin.file:
        path: /home/scitech/ws
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Clone source code
      ansible.builtin.git:
        repo: https://github.com/UC-SciTech/scitech-piot-gw.git
        dest: /home/scitech/ws/scitech-piot-gw
        clone: true
        update: true
      become: true
      become_user: scitech

    - name: Create env directory if it does not exist
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    # make sure all the mount points exist if not create them
    # - name: Create env/hostapd folder
    #   ansible.builtin.file:
    #     path: /home/scitech/ws/scitech-piot-gw/env/hostapd
    #     state: directory
    #     owner: scitech
    #     group: scitech
    #     mode: '0755'

    - name: Create env/pihole/pihole folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/pihole/pihole
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/pihole/dnsmasq.d folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/pihole/dnsmasq.d
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/emqx/etc folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/emqx/etc
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/emqx/data folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/emqx/data
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/influxdb folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/influxdb
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/telegraf folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/telegraf
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/homeassistant folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/homeassistant
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/nodered folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/nodered
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create env/homer/assets folder
      ansible.builtin.file:
        path: /home/scitech/ws/scitech-piot-gw/env/homer/assets
        state: directory
        owner: scitech
        group: scitech
        mode: '0755'

    - name: Create .env file from the vars_files variables
      ansible.builtin.template:
        src: templates/.env.j2
        dest: /home/scitech/ws/scitech-piot-gw/.env
        owner: scitech
        group: scitech
        mode: '0644'

    # - name: Resolve hostapd template
    #   ansible.builtin.template:
    #     src: templates/hostapd.conf.j2
    #     dest: /home/scitech/ws/scitech-piot-gw/env/hostapd/hostapd.conf
    #     owner: scitech
    #     group: scitech
    #     mode: '0644'

    - name: Resolve telegraf config template
      ansible.builtin.template:
        src: templates/telegraf.conf.j2
        dest: /home/scitech/ws/scitech-piot-gw/env/telegraf/telegraf.conf
        owner: scitech
        group: scitech
        mode: '0644'

    - name: Template emqx config
      ansible.builtin.template:
        src: templates/emqx.conf.j2
        dest: /home/scitech/ws/scitech-piot-gw/env/emqx/etc/emqx.conf
        owner: scitech
        group: scitech
        mode: '0644'

    - name: Resolve homer config template
      ansible.builtin.template:
        src: templates/config.yml.homer.j2
        dest: /home/scitech/ws/scitech-piot-gw/env/homer/assets/config.yml
        owner: scitech
        group: scitech
        mode: '0644'

    - name: Clone lora source github repository
      ansible.builtin.git:
        repo: https://github.com/Lora-net/sx1302_hal.git
        dest: /home/scitech/ws/sx1302_hal
        clone: true
        update: true
      become: true
      become_user: scitech

    - name: Install sx1302_hal
      ansible.builtin.shell: |
        make clean all
        make all
        exit 0
      args:
        chdir: /home/scitech/ws/sx1302_hal

    - name: Copy reset_lgw to util_chip_id
      ansible.builtin.copy:
        src: /home/scitech/ws/sx1302_hal/tools/reset_lgw.sh
        dest: /home/scitech/ws/sx1302_hal/util_chip_id/reset_lgw.sh
        owner: scitech
        group: scitech
        mode: '0755'
        remote_src: true

    - name: Copy reset_lgw to packet_forwarder in remote machine
      ansible.builtin.copy:
        src: /home/scitech/ws/sx1302_hal/tools/reset_lgw.sh
        dest: /home/scitech/ws/sx1302_hal/packet_forwarder/reset_lgw.sh
        owner: scitech
        group: scitech
        mode: '0755'
        remote_src: true

    - name: Resolve packet forward config template
      ansible.builtin.template:
        src: templates/global_conf.json.sx1250.AS923.j2
        dest: /home/scitech/ws/sx1302_hal/packet_forwarder/global_conf.json
        owner: scitech
        group: scitech
        mode: '0644'

    - name: Resolve packet forward service template
      ansible.builtin.template:
        src: templates/lora_pkt_fwd.service.j2
        dest: /etc/systemd/system/lora_pkt_fwd.service
        owner: root
        group: root
        mode: '0644'

    # reboot when done
    # - name: Reboot gateways
    #   ansible.builtin.reboot:
    #     reboot_timeout: 3600
